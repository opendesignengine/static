/*
 * Oscilloscope
 * Gives a visual rendering of analog pin 0 in realtime.
 * 
 * This project is part of Accrochages
 * See http://accrochages.drone.ws
 * 
 * (c) 2008 Sofian Audry (info@sofianaudry.com)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */ 
import processing.serial.*;

Serial port;  // Create object from Serial class
int val_front;      // Data received from the serial port
//int val_back;
int[] values_front;
//int[] values_back;

void setup() 
{
  size(640, 480);
  // Open the port that the board is connected to and use the same speed (9600 bps)
  //port = new Serial(this, "COM13", 115200);
  port = new Serial(this, "/dev/ttyACM0", 115200);
  values_front = new int[width];
  //values_back = new int[width];
  smooth();
}

int getY(int val) {
  return (int)(val / 1023.0f * height) - 1;
}

void draw()
{
  
  while (port.available() >= 3) {
    int val= port.read();
    /*if (port.read() == 0xff) {
      val_front = (port.read() << 8) | (port.read());
      val_back = (port.read() << 8) | (port.read());
    }*/
    if (val == 0xff) {    
     val_front = (port.read() << 8) | (port.read()); 
    }/*else if (val == 0xfe) {
      val_back = (port.read() << 8) | (port.read());
    }*/   
  }
  for (int i=0; i<width-1; i++)
    values_front[i] = values_front[i+1];
  values_front[width-1] = val_front;
  /*for (int i=0; i<width-1; i++)
    values_back[i] = values_back[i+1];
  values_back[width-1] = val_back;*/
  background(0);
  stroke(255);
  for (int x=1; x<width; x++) {
    line(width-x,   height-1-getY(values_front[x-1]), 
         width-1-x, height-1-getY(values_front[x]));
  }
  /*stroke(255, 102, 0);
  for (int x=1; x<width; x++) {
    line(width-x,   height-1-getY(values_back[x-1]), 
         width-1-x, height-1-getY(values_back[x]));
  }*/
  
}

/*
// The Arduino code.

#define ANALOG_IN 0

void setup() {
  Serial.begin(9600); 
}

void loop() {
  int val = analogRead(ANALOG_IN);
  Serial.print( 0xff, BYTE);
  Serial.print( (val >> 8) & 0xff, BYTE);
  Serial.print( val & 0xff, BYTE);
}

*/
